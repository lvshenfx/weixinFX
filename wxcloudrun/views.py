from datetime import datetime
from run import app
from wxcloudrun.dao import delete_counterbyid, query_counterbyid, insert_counter, update_counterbyid
from wxcloudrun.model import Counters
from wxcloudrun.response import make_succ_empty_response, make_succ_response, make_err_response
from flask import Flask,render_template,request

app = Flask(__name__)

def zuli_sz(gao,di):
    c = abs(gao - di)
    if gao > di:
        a = gao
    else:
        a = di
    if gao > di:
        b = di
    else:
        b = gao
    n = c
    m = c // 2
    x = m % 8
    y = n % 8
    z = n % 6

    if x == 0:
        x = 8
    else:
        x

    if y == 0:
        y = 8
    else:
        y

    if z == 0:
        z = 6
    else:
        z

    xyz = x*100 + y*10 + z
    dict = {111:0.10,
            112:0.25,
            113:0.43,
            114:0.40,
            115:0.63,
            116:0.86,
            121:0.06,
            122:0.13,
            123:0.23,
            124:0.44,
            125:0.63,
            126:0.80,
            131:0.06,
            132:0.17,
            133:0.20,
            134:0.67,
            135:0.94,
            136:0.20,
            141:0.04,
            142:0.10,
            143:0.14,
            144:0.62,
            145:0.83,
            146:0.04,
            151:0.10,
            152:0.13,
            153:0.20,
            154:0.11,
            155:0.56,
            156:1.00,
            161:0.06,
            162:0.08,
            163:0.14,
            164:0.92,
            165:0.25,
            166:0.57,
            171:0.06,
            172:0.10,
            173:0.13,
            174:0.08,
            175:0.46,
            176:0.83,
            181:0.04,
            182:0.07,
            183:0.10,
            184:0.94,
            185:0.25,
            186:0.55,
            211:0.17,
            212:0.40,
            213:0.67,
            214:0.33,
            215:0.50,
            216:0.86,
            221:0.10,
            222:0.22,
            223:0.40,
            224:0.40,
            225:0.56,
            226:0.80,
            231:0.10,
            232:0.29,
            233:0.35,
            234:0.60,
            235:0.83,
            236:0.20,
            241:0.07,
            242:0.18,
            243:0.26,
            244:0.57,
            245:0.77,
            246:0.04,
            251:0.17,
            252:0.22,
            253:0.35,
            254:1.00,
            255:0.39,
            256:1.00,
            261:0.10,
            262:0.15,
            263:0.26,
            264:0.86,
            265:0.15,
            266:0.57,
            271:0.10,
            272:0.18,
            273:0.24,
            274:1.00,
            275:0.35,
            276:0.83,
            281:0.07,
            282:0.13,
            283:0.19,
            284:0.89,
            285:0.18,
            286:0.55,
            311:0.20,
            312:0.46,
            313:0.75,
            314:0.27,
            315:0.56,
            316:0.50,
            321:0.13,
            322:0.29,
            323:0.50,
            324:0.35,
            325:0.59,
            326:0.60,
            331:0.12,
            332:0.32,
            333:0.41,
            334:0.48,
            335:0.79,
            336:0.82,
            341:0.10,
            342:0.24,
            343:0.35,
            344:0.52,
            345:0.80,
            346:0.86,
            351:0.20,
            352:0.29,
            353:0.45,
            354:0.87,
            355:0.47,
            356:0.50,
            361:0.13,
            362:0.21,
            363:0.35,
            364:0.77,
            365:0.20,
            366:0.29,
            371:0.13,
            372:0.24,
            373:0.32,
            374:0.90,
            375:0.40,
            376:0.50,
            381:0.10,
            382:0.18,
            383:0.26,
            384:0.82,
            385:0.21,
            386:0.33,
            411:0.24,
            412:0.53,
            413:0.86,
            414:0.24,
            415:0.45,
            416:0.50,
            421:0.16,
            422:0.35,
            423:0.60,
            424:0.32,
            425:0.53,
            426:0.60,
            431:0.16,
            432:0.42,
            433:0.55,
            434:0.48,
            435:0.79,
            436:0.90,
            441:0.12,
            442:0.30,
            443:0.43,
            444:0.48,
            445:0.74,
            446:0.86,
            451:0.24,
            452:0.35,
            453:0.55,
            454:0.80,
            455:0.32,
            456:0.50,
            461:0.16,
            462:0.26,
            463:0.43,
            464:0.73,
            465:0.11,
            466:0.29,
            471:0.16,
            472:0.30,
            473:0.40,
            474:0.85,
            475:0.30,
            476:0.50,
            481:0.12,
            482:0.23,
            483:0.33,
            484:0.78,
            485:0.14,
            486:0.33,
            511:0.24,
            512:0.53,
            513:0.83,
            514:0.31,
            515:0.26,
            516:0.33,
            521:0.17,
            522:0.37,
            523:0.63,
            524:0.38,
            525:0.37,
            526:0.46,
            531:0.17,
            532:0.43,
            533:0.58,
            534:0.57,
            535:0.56,
            536:0.69,
            541:0.14,
            542:0.32,
            543:0.47,
            544:0.55,
            545:0.57,
            546:0.71,
            551:0.24,
            552:0.37,
            553:0.58,
            554:0.95,
            555:0.93,
            556:0.15,
            561:0.15,
            562:0.26,
            563:0.42,
            564:0.73,
            565:0.77,
            566:0.95,
            571:0.17,
            572:0.32,
            573:0.44,
            574:0.97,
            575:1.00,
            576:0.24,
            581:0.14,
            582:0.26,
            583:0.38,
            584:0.86,
            585:0.93,
            586:0.14,
            611:0.26,
            612:0.57,
            613:0.90,
            614:0.27,
            615:0.24,
            616:0.33,
            621:0.19,
            622:0.41,
            623:0.69,
            624:0.35,
            625:0.34,
            626:0.46,
            631:0.19,
            632:0.48,
            633:0.64,
            634:0.52,
            635:0.52,
            636:0.69,
            641:0.15,
            642:0.36,
            643:0.53,
            644:0.52,
            645:0.54,
            646:0.71,
            651:0.26,
            652:0.41,
            653:0.64,
            654:0.87,
            655:0.86,
            656:0.15,
            661:0.19,
            662:0.32,
            663:0.53,
            664:0.77,
            665:0.81,
            666:0.06,
            671:0.19,
            672:0.36,
            673:0.50,
            674:0.90,
            675:0.95,
            676:0.24,
            681:0.15,
            682:0.29,
            683:0.43,
            684:0.82,
            685:0.89,
            686:0.14,
            711:0.27,
            712:0.58,
            713:0.91,
            714:0.22,
            715:0.25,
            716:0.26,
            721:0.21,
            722:0.44,
            723:0.72,
            724:0.31,
            725:0.36,
            726:0.39,
            731:0.21,
            732:0.50,
            733:0.68,
            734:0.46,
            735:0.54,
            736:0.58,
            741:0.17,
            742:0.39,
            743:0.57,
            744:0.47,
            745:0.56,
            746:0.62,
            751:0.27,
            752:0.47,
            753:0.68,
            754:0.77,
            755:0.89,
            756:0.97,
            761:0.21,
            762:0.35,
            763:0.57,
            764:0.71,
            765:0.83,
            766:0.92,
            771:0.21,
            772:0.39,
            773:0.54,
            774:0.82,
            775:0.97,
            776:0.08,
            781:0.17,
            782:0.32,
            783:0.47,
            784:0.76,
            785:0.91,
            786:0.02,
            811:0.29,
            812:0.62,
            813:0.96,
            814:0.20,
            815:0.23,
            816:0.26,
            821:0.22,
            822:0.47,
            823:0.77,
            824:0.29,
            825:0.33,
            826:0.39,
            831:0.22,
            832:0.53,
            833:0.73,
            834:0.43,
            835:0.50,
            836:0.58,
            841:0.18,
            842:0.42,
            843:0.62,
            844:0.44,
            845:0.53,
            846:0.62,
            851:0.29,
            852:0.47,
            853:0.73,
            854:0.71,
            855:0.83,
            856:0.97,
            861:0.22,
            862:0.38,
            863:0.62,
            864:0.67,
            865:0.79,
            866:0.92,
            871:0.22,
            872:0.42,
            873:0.59,
            874:0.78,
            875:0.92,
            876:0.08,
            881:0.18,
            882:0.35,
            883:0.51,
            884:0.73,
            885:0.87,
            886:0.02}
    w = dict[xyz]
    return(b,n,w)

def zhicheng_xd(gao,di):
    c = abs(gao - di)
    if gao > di:
        a = gao
    else:
        a = di
    if gao > di:
        b = di
    else:
        b = gao
    n = c
    m = c // 2
    x = m % 8
    y = n % 8
    z = n % 6

    if x == 0:
        x = 8
    else:
        x

    if y == 0:
        y = 8
    else:
        y

    if z == 0:
        z = 6
    else:
        z

    xyz = x*100 + y*10 + z
    dict = {111:0.10,
            112:0.25,
            113:0.43,
            114:0.40,
            115:0.63,
            116:0.86,
            121:0.06,
            122:0.13,
            123:0.23,
            124:0.44,
            125:0.63,
            126:0.80,
            131:0.06,
            132:0.17,
            133:0.20,
            134:0.67,
            135:0.94,
            136:0.20,
            141:0.04,
            142:0.10,
            143:0.14,
            144:0.62,
            145:0.83,
            146:0.04,
            151:0.10,
            152:0.13,
            153:0.20,
            154:0.11,
            155:0.56,
            156:1.00,
            161:0.06,
            162:0.08,
            163:0.14,
            164:0.92,
            165:0.25,
            166:0.57,
            171:0.06,
            172:0.10,
            173:0.13,
            174:0.08,
            175:0.46,
            176:0.83,
            181:0.04,
            182:0.07,
            183:0.10,
            184:0.94,
            185:0.25,
            186:0.55,
            211:0.17,
            212:0.40,
            213:0.67,
            214:0.33,
            215:0.50,
            216:0.86,
            221:0.10,
            222:0.22,
            223:0.40,
            224:0.40,
            225:0.56,
            226:0.80,
            231:0.10,
            232:0.29,
            233:0.35,
            234:0.60,
            235:0.83,
            236:0.20,
            241:0.07,
            242:0.18,
            243:0.26,
            244:0.57,
            245:0.77,
            246:0.04,
            251:0.17,
            252:0.22,
            253:0.35,
            254:1.00,
            255:0.39,
            256:1.00,
            261:0.10,
            262:0.15,
            263:0.26,
            264:0.86,
            265:0.15,
            266:0.57,
            271:0.10,
            272:0.18,
            273:0.24,
            274:1.00,
            275:0.35,
            276:0.83,
            281:0.07,
            282:0.13,
            283:0.19,
            284:0.89,
            285:0.18,
            286:0.55,
            311:0.20,
            312:0.46,
            313:0.75,
            314:0.27,
            315:0.56,
            316:0.50,
            321:0.13,
            322:0.29,
            323:0.50,
            324:0.35,
            325:0.59,
            326:0.60,
            331:0.12,
            332:0.32,
            333:0.41,
            334:0.48,
            335:0.79,
            336:0.82,
            341:0.10,
            342:0.24,
            343:0.35,
            344:0.52,
            345:0.80,
            346:0.86,
            351:0.20,
            352:0.29,
            353:0.45,
            354:0.87,
            355:0.47,
            356:0.50,
            361:0.13,
            362:0.21,
            363:0.35,
            364:0.77,
            365:0.20,
            366:0.29,
            371:0.13,
            372:0.24,
            373:0.32,
            374:0.90,
            375:0.40,
            376:0.50,
            381:0.10,
            382:0.18,
            383:0.26,
            384:0.82,
            385:0.21,
            386:0.33,
            411:0.24,
            412:0.53,
            413:0.86,
            414:0.24,
            415:0.45,
            416:0.50,
            421:0.16,
            422:0.35,
            423:0.60,
            424:0.32,
            425:0.53,
            426:0.60,
            431:0.16,
            432:0.42,
            433:0.55,
            434:0.48,
            435:0.79,
            436:0.90,
            441:0.12,
            442:0.30,
            443:0.43,
            444:0.48,
            445:0.74,
            446:0.86,
            451:0.24,
            452:0.35,
            453:0.55,
            454:0.80,
            455:0.32,
            456:0.50,
            461:0.16,
            462:0.26,
            463:0.43,
            464:0.73,
            465:0.11,
            466:0.29,
            471:0.16,
            472:0.30,
            473:0.40,
            474:0.85,
            475:0.30,
            476:0.50,
            481:0.12,
            482:0.23,
            483:0.33,
            484:0.78,
            485:0.14,
            486:0.33,
            511:0.24,
            512:0.53,
            513:0.83,
            514:0.31,
            515:0.26,
            516:0.33,
            521:0.17,
            522:0.37,
            523:0.63,
            524:0.38,
            525:0.37,
            526:0.46,
            531:0.17,
            532:0.43,
            533:0.58,
            534:0.57,
            535:0.56,
            536:0.69,
            541:0.14,
            542:0.32,
            543:0.47,
            544:0.55,
            545:0.57,
            546:0.71,
            551:0.24,
            552:0.37,
            553:0.58,
            554:0.95,
            555:0.93,
            556:0.15,
            561:0.15,
            562:0.26,
            563:0.42,
            564:0.73,
            565:0.77,
            566:0.95,
            571:0.17,
            572:0.32,
            573:0.44,
            574:0.97,
            575:1.00,
            576:0.24,
            581:0.14,
            582:0.26,
            583:0.38,
            584:0.86,
            585:0.93,
            586:0.14,
            611:0.26,
            612:0.57,
            613:0.90,
            614:0.27,
            615:0.24,
            616:0.33,
            621:0.19,
            622:0.41,
            623:0.69,
            624:0.35,
            625:0.34,
            626:0.46,
            631:0.19,
            632:0.48,
            633:0.64,
            634:0.52,
            635:0.52,
            636:0.69,
            641:0.15,
            642:0.36,
            643:0.53,
            644:0.52,
            645:0.54,
            646:0.71,
            651:0.26,
            652:0.41,
            653:0.64,
            654:0.87,
            655:0.86,
            656:0.15,
            661:0.19,
            662:0.32,
            663:0.53,
            664:0.77,
            665:0.81,
            666:0.06,
            671:0.19,
            672:0.36,
            673:0.50,
            674:0.90,
            675:0.95,
            676:0.24,
            681:0.15,
            682:0.29,
            683:0.43,
            684:0.82,
            685:0.89,
            686:0.14,
            711:0.27,
            712:0.58,
            713:0.91,
            714:0.22,
            715:0.25,
            716:0.26,
            721:0.21,
            722:0.44,
            723:0.72,
            724:0.31,
            725:0.36,
            726:0.39,
            731:0.21,
            732:0.50,
            733:0.68,
            734:0.46,
            735:0.54,
            736:0.58,
            741:0.17,
            742:0.39,
            743:0.57,
            744:0.47,
            745:0.56,
            746:0.62,
            751:0.27,
            752:0.47,
            753:0.68,
            754:0.77,
            755:0.89,
            756:0.97,
            761:0.21,
            762:0.35,
            763:0.57,
            764:0.71,
            765:0.83,
            766:0.92,
            771:0.21,
            772:0.39,
            773:0.54,
            774:0.82,
            775:0.97,
            776:0.08,
            781:0.17,
            782:0.32,
            783:0.47,
            784:0.76,
            785:0.91,
            786:0.02,
            811:0.29,
            812:0.62,
            813:0.96,
            814:0.20,
            815:0.23,
            816:0.26,
            821:0.22,
            822:0.47,
            823:0.77,
            824:0.29,
            825:0.33,
            826:0.39,
            831:0.22,
            832:0.53,
            833:0.73,
            834:0.43,
            835:0.50,
            836:0.58,
            841:0.18,
            842:0.42,
            843:0.62,
            844:0.44,
            845:0.53,
            846:0.62,
            851:0.29,
            852:0.47,
            853:0.73,
            854:0.71,
            855:0.83,
            856:0.97,
            861:0.22,
            862:0.38,
            863:0.62,
            864:0.67,
            865:0.79,
            866:0.92,
            871:0.22,
            872:0.42,
            873:0.59,
            874:0.78,
            875:0.92,
            876:0.08,
            881:0.18,
            882:0.35,
            883:0.51,
            884:0.73,
            885:0.87,
            886:0.02}
    w = dict[xyz]
    return(a,n,w)

def zhuanzhe_gs(zhuanzhe):
    n = zhuanzhe
    m = zhuanzhe // 2
    b = zhuanzhe
    x = m % 8
    y = n % 8
    z = n % 6

    if x == 0:
        x = 8
    else:
        x

    if y == 0:
        y = 8
    else:
        y

    if z == 0:
        z = 6
    else:
        z

    xyz = x*100 + y*10 + z
    dict = {111:0.10,
            112:0.25,
            113:0.43,
            114:0.40,
            115:0.63,
            116:0.86,
            121:0.06,
            122:0.13,
            123:0.23,
            124:0.44,
            125:0.63,
            126:0.80,
            131:0.06,
            132:0.17,
            133:0.20,
            134:0.67,
            135:0.94,
            136:0.20,
            141:0.04,
            142:0.10,
            143:0.14,
            144:0.62,
            145:0.83,
            146:0.04,
            151:0.10,
            152:0.13,
            153:0.20,
            154:0.11,
            155:0.56,
            156:1.00,
            161:0.06,
            162:0.08,
            163:0.14,
            164:0.92,
            165:0.25,
            166:0.57,
            171:0.06,
            172:0.10,
            173:0.13,
            174:0.08,
            175:0.46,
            176:0.83,
            181:0.04,
            182:0.07,
            183:0.10,
            184:0.94,
            185:0.25,
            186:0.55,
            211:0.17,
            212:0.40,
            213:0.67,
            214:0.33,
            215:0.50,
            216:0.86,
            221:0.10,
            222:0.22,
            223:0.40,
            224:0.40,
            225:0.56,
            226:0.80,
            231:0.10,
            232:0.29,
            233:0.35,
            234:0.60,
            235:0.83,
            236:0.20,
            241:0.07,
            242:0.18,
            243:0.26,
            244:0.57,
            245:0.77,
            246:0.04,
            251:0.17,
            252:0.22,
            253:0.35,
            254:1.00,
            255:0.39,
            256:1.00,
            261:0.10,
            262:0.15,
            263:0.26,
            264:0.86,
            265:0.15,
            266:0.57,
            271:0.10,
            272:0.18,
            273:0.24,
            274:1.00,
            275:0.35,
            276:0.83,
            281:0.07,
            282:0.13,
            283:0.19,
            284:0.89,
            285:0.18,
            286:0.55,
            311:0.20,
            312:0.46,
            313:0.75,
            314:0.27,
            315:0.56,
            316:0.50,
            321:0.13,
            322:0.29,
            323:0.50,
            324:0.35,
            325:0.59,
            326:0.60,
            331:0.12,
            332:0.32,
            333:0.41,
            334:0.48,
            335:0.79,
            336:0.82,
            341:0.10,
            342:0.24,
            343:0.35,
            344:0.52,
            345:0.80,
            346:0.86,
            351:0.20,
            352:0.29,
            353:0.45,
            354:0.87,
            355:0.47,
            356:0.50,
            361:0.13,
            362:0.21,
            363:0.35,
            364:0.77,
            365:0.20,
            366:0.29,
            371:0.13,
            372:0.24,
            373:0.32,
            374:0.90,
            375:0.40,
            376:0.50,
            381:0.10,
            382:0.18,
            383:0.26,
            384:0.82,
            385:0.21,
            386:0.33,
            411:0.24,
            412:0.53,
            413:0.86,
            414:0.24,
            415:0.45,
            416:0.50,
            421:0.16,
            422:0.35,
            423:0.60,
            424:0.32,
            425:0.53,
            426:0.60,
            431:0.16,
            432:0.42,
            433:0.55,
            434:0.48,
            435:0.79,
            436:0.90,
            441:0.12,
            442:0.30,
            443:0.43,
            444:0.48,
            445:0.74,
            446:0.86,
            451:0.24,
            452:0.35,
            453:0.55,
            454:0.80,
            455:0.32,
            456:0.50,
            461:0.16,
            462:0.26,
            463:0.43,
            464:0.73,
            465:0.11,
            466:0.29,
            471:0.16,
            472:0.30,
            473:0.40,
            474:0.85,
            475:0.30,
            476:0.50,
            481:0.12,
            482:0.23,
            483:0.33,
            484:0.78,
            485:0.14,
            486:0.33,
            511:0.24,
            512:0.53,
            513:0.83,
            514:0.31,
            515:0.26,
            516:0.33,
            521:0.17,
            522:0.37,
            523:0.63,
            524:0.38,
            525:0.37,
            526:0.46,
            531:0.17,
            532:0.43,
            533:0.58,
            534:0.57,
            535:0.56,
            536:0.69,
            541:0.14,
            542:0.32,
            543:0.47,
            544:0.55,
            545:0.57,
            546:0.71,
            551:0.24,
            552:0.37,
            553:0.58,
            554:0.95,
            555:0.93,
            556:0.15,
            561:0.15,
            562:0.26,
            563:0.42,
            564:0.73,
            565:0.77,
            566:0.95,
            571:0.17,
            572:0.32,
            573:0.44,
            574:0.97,
            575:1.00,
            576:0.24,
            581:0.14,
            582:0.26,
            583:0.38,
            584:0.86,
            585:0.93,
            586:0.14,
            611:0.26,
            612:0.57,
            613:0.90,
            614:0.27,
            615:0.24,
            616:0.33,
            621:0.19,
            622:0.41,
            623:0.69,
            624:0.35,
            625:0.34,
            626:0.46,
            631:0.19,
            632:0.48,
            633:0.64,
            634:0.52,
            635:0.52,
            636:0.69,
            641:0.15,
            642:0.36,
            643:0.53,
            644:0.52,
            645:0.54,
            646:0.71,
            651:0.26,
            652:0.41,
            653:0.64,
            654:0.87,
            655:0.86,
            656:0.15,
            661:0.19,
            662:0.32,
            663:0.53,
            664:0.77,
            665:0.81,
            666:0.06,
            671:0.19,
            672:0.36,
            673:0.50,
            674:0.90,
            675:0.95,
            676:0.24,
            681:0.15,
            682:0.29,
            683:0.43,
            684:0.82,
            685:0.89,
            686:0.14,
            711:0.27,
            712:0.58,
            713:0.91,
            714:0.22,
            715:0.25,
            716:0.26,
            721:0.21,
            722:0.44,
            723:0.72,
            724:0.31,
            725:0.36,
            726:0.39,
            731:0.21,
            732:0.50,
            733:0.68,
            734:0.46,
            735:0.54,
            736:0.58,
            741:0.17,
            742:0.39,
            743:0.57,
            744:0.47,
            745:0.56,
            746:0.62,
            751:0.27,
            752:0.47,
            753:0.68,
            754:0.77,
            755:0.89,
            756:0.97,
            761:0.21,
            762:0.35,
            763:0.57,
            764:0.71,
            765:0.83,
            766:0.92,
            771:0.21,
            772:0.39,
            773:0.54,
            774:0.82,
            775:0.97,
            776:0.08,
            781:0.17,
            782:0.32,
            783:0.47,
            784:0.76,
            785:0.91,
            786:0.02,
            811:0.29,
            812:0.62,
            813:0.96,
            814:0.20,
            815:0.23,
            816:0.26,
            821:0.22,
            822:0.47,
            823:0.77,
            824:0.29,
            825:0.33,
            826:0.39,
            831:0.22,
            832:0.53,
            833:0.73,
            834:0.43,
            835:0.50,
            836:0.58,
            841:0.18,
            842:0.42,
            843:0.62,
            844:0.44,
            845:0.53,
            846:0.62,
            851:0.29,
            852:0.47,
            853:0.73,
            854:0.71,
            855:0.83,
            856:0.97,
            861:0.22,
            862:0.38,
            863:0.62,
            864:0.67,
            865:0.79,
            866:0.92,
            871:0.22,
            872:0.42,
            873:0.59,
            874:0.78,
            875:0.92,
            876:0.08,
            881:0.18,
            882:0.35,
            883:0.51,
            884:0.73,
            885:0.87,
            886:0.02}
    w = dict[xyz]
    return(b,n,w)

@app.route('/',methods=['GET','POST'])
def home():
    zuli_1 = ''
    zuli_2 = ''
    zuli_3 = ''
    zuli_4 = ''
    zuli_5 = ''
    zuli_6 = ''
    zuli_7 = ''
    zuli_8 = ''
    zuli_9 = ''
    zuli_10 = ''
    zuligao = ''
    zulidi = ''
    if request.method == 'POST':
        if request.form.get('jisuanzuli')=='计算阻力价':
            if request.form.get('zuligao')!='' and request.form.get('zulidi')!='':
                zuligao = int(request.form.get('zuligao'))
                zulidi = int(request.form.get('zulidi'))
                b = zuli_sz(zuligao,zulidi)[0]
                n = zuli_sz(zuligao,zulidi)[1]
                w = zuli_sz(zuligao,zulidi)[2]
                zuli_1 = int(b + n*w)
                zuli_2 = int(b + n*(w + 1))
                zuli_3 = int(b + n*(w + 2))
                zuli_4 = int(b + n*(w + 3))
                zuli_5 = int(b + n*(w + 4))
                zuli_6 = int(b + n*(w + 5))
                zuli_7 = int(b + n*(w + 6))
                zuli_8 = int(b + n*(w + 7))
                zuli_9 = int(b + n*(w + 8))
                zuli_10 = int(b + n*(w + 9))
            else:
                zuli_1 = ''
                zuli_2 = ''
                zuli_3 = ''
                zuli_4 = ''
                zuli_5 = ''
                zuli_6 = ''
                zuli_7 = ''
                zuli_8 = ''
                zuli_9 = ''
                zuli_10 = ''
                zuligao = ''
                zulidi = ''
        if request.form.get('chongxinzuli')=='重新计算':
            zuli_1 = ''
            zuli_2 = ''
            zuli_3 = ''
            zuli_4 = ''
            zuli_5 = ''
            zuli_6 = ''
            zuli_7 = ''
            zuli_8 = ''
            zuli_9 = ''
            zuli_10 = ''
            zuligao = ''
            zulidi = ''
    return render_template('boot_11.html',my_zuli_gao=zuligao,my_zuli_di=zulidi,my_zuli_1=zuli_1,my_zuli_2=zuli_2,my_zuli_3=zuli_3,my_zuli_4=zuli_4,my_zuli_5=zuli_5,my_zuli_6=zuli_6,my_zuli_7=zuli_7,my_zuli_8=zuli_8,my_zuli_9=zuli_9,my_zuli_10=zuli_10)

@app.route('/1',methods=['GET','POST'])
def gumin_sz():
    zuli_1 = ''
    zuli_2 = ''
    zuli_3 = ''
    zuli_4 = ''
    zuli_5 = ''
    zuli_6 = ''
    zuli_7 = ''
    zuli_8 = ''
    zuli_9 = ''
    zuli_10 = ''
    zuligao = ''
    zulidi = ''
    if request.method == 'POST':
        if request.form.get('jisuanzuli')=='计算阻力价':
            if request.form.get('zuligao')!='' and request.form.get('zulidi')!='':
                zuligao = int(request.form.get('zuligao'))
                zulidi = int(request.form.get('zulidi'))
                b = zuli_sz(zuligao,zulidi)[0]
                n = zuli_sz(zuligao,zulidi)[1]
                w = zuli_sz(zuligao,zulidi)[2]
                zuli_1 = int(b + n*w)
                zuli_2 = int(b + n*(w + 1))
                zuli_3 = int(b + n*(w + 2))
                zuli_4 = int(b + n*(w + 3))
                zuli_5 = int(b + n*(w + 4))
                zuli_6 = int(b + n*(w + 5))
                zuli_7 = int(b + n*(w + 6))
                zuli_8 = int(b + n*(w + 7))
                zuli_9 = int(b + n*(w + 8))
                zuli_10 = int(b + n*(w + 9))
            else:
                zuli_1 = ''
                zuli_2 = ''
                zuli_3 = ''
                zuli_4 = ''
                zuli_5 = ''
                zuli_6 = ''
                zuli_7 = ''
                zuli_8 = ''
                zuli_9 = ''
                zuli_10 = ''
                zuligao = ''
                zulidi = ''
        if request.form.get('chongxinzuli')=='重新计算':
            zuli_1 = ''
            zuli_2 = ''
            zuli_3 = ''
            zuli_4 = ''
            zuli_5 = ''
            zuli_6 = ''
            zuli_7 = ''
            zuli_8 = ''
            zuli_9 = ''
            zuli_10 = ''
            zuligao = ''
            zulidi = ''
    return render_template('boot_11.html',my_zuli_gao=zuligao,my_zuli_di=zulidi,my_zuli_1=zuli_1,my_zuli_2=zuli_2,my_zuli_3=zuli_3,my_zuli_4=zuli_4,my_zuli_5=zuli_5,my_zuli_6=zuli_6,my_zuli_7=zuli_7,my_zuli_8=zuli_8,my_zuli_9=zuli_9,my_zuli_10=zuli_10)
@app.route('/2',methods=['GET','POST'])
def gumin_zc():
    #sz_zhicheng
    zhicheng_1 = ''
    zhicheng_2 = ''
    zhicheng_3 = ''
    zhicheng_4 = ''
    zhicheng_5 = ''
    zhicheng_6 = ''
    zhicheng_7 = ''
    zhicheng_8 = ''
    zhicheng_9 = ''
    zhicheng_10 = ''
    zhichenggao = ''
    zhichengdi = ''
    if request.method == 'POST':
        if request.form.get('jisuanzhicheng')=='计算支撑价':
            if request.form.get('zhichenggao')!='' and request.form.get('zhichengdi')!='':
                zhichenggao = int(request.form.get('zhichenggao'))
                zhichengdi = int(request.form.get('zhichengdi'))
                a = zhicheng_xd(zhichenggao,zhichengdi)[0]
                n = zhicheng_xd(zhichenggao,zhichengdi)[1]
                w = zhicheng_xd(zhichenggao,zhichengdi)[2]
                zhicheng_1 = int(a - n*w)
                zhicheng_2 = int(a - n*(w + 1))
                zhicheng_3 = int(a - n*(w + 2))
                zhicheng_4 = int(a - n*(w + 3))
                zhicheng_5 = int(a - n*(w + 4))
                zhicheng_6 = int(a - n*(w + 5))
                zhicheng_7 = int(a - n*(w + 6))
                zhicheng_8 = int(a - n*(w + 7))
                zhicheng_9 = int(a - n*(w + 8))
                zhicheng_10 = int(a - n*(w + 9))
                if zhicheng_1 > 0:
                    zhicheng_1 = zhicheng_1
                else:
                    zhicheng_1 = 0
                if zhicheng_2 > 0:
                    zhicheng_2 = zhicheng_2
                else:
                    zhicheng_2 = 0
                    zhicheng_2 = 0
                if zhicheng_3 > 0:
                    zhicheng_3 = zhicheng_3
                else:
                    zhicheng_3 = 0
                if zhicheng_4 > 0:
                    zhicheng_4 = zhicheng_4
                else:
                    zhicheng_4 = 0
                if zhicheng_5 > 0:
                    zhicheng_5 = zhicheng_5
                else:
                    zhicheng_5 = 0
                if zhicheng_6 > 0:
                    zhicheng_6 = zhicheng_6
                else:
                    zhicheng_6 = 0
                if zhicheng_7 > 0:
                    zhicheng_7 = zhicheng_7
                else:
                    zhicheng_7 = 0
                if zhicheng_8 > 0:
                    zhicheng_8 = zhicheng_8
                else:
                    zhicheng_8 = 0
                if zhicheng_9 > 0:
                    zhicheng_9 = zhicheng_9
                else:
                    zhicheng_9 = 0
                if zhicheng_10 > 0:
                    zhicheng_10 = zhicheng_10
                else:
                    zhicheng_10 = 0
            else:
                zhicheng_1 = ''
                zhicheng_2 = ''
                zhicheng_3 = ''
                zhicheng_4 = ''
                zhicheng_5 = ''
                zhicheng_6 = ''
                zhicheng_7 = ''
                zhicheng_8 = ''
                zhicheng_9 = ''
                zhicheng_10 = ''
                zhichenggao = ''
                zhichengdi = ''
        if request.form.get('chongxinzhicheng')=='重新计算':
            zhicheng_1 = ''
            zhicheng_2 = ''
            zhicheng_3 = ''
            zhicheng_4 = ''
            zhicheng_5 = ''
            zhicheng_6 = ''
            zhicheng_7 = ''
            zhicheng_8 = ''
            zhicheng_9 = ''
            zhicheng_10 = ''
            zhichenggao = ''
            zhichengdi = ''
    return render_template('boot_22.html',my_zhicheng_gao=zhichenggao,my_zhicheng_di=zhichengdi,my_zhicheng_1=zhicheng_1,my_zhicheng_2=zhicheng_2,my_zhicheng_3=zhicheng_3,my_zhicheng_4=zhicheng_4,my_zhicheng_5=zhicheng_5,my_zhicheng_6=zhicheng_6,my_zhicheng_7=zhicheng_7,my_zhicheng_8=zhicheng_8,my_zhicheng_9=zhicheng_9,my_zhicheng_10=zhicheng_10)
@app.route('/3',methods=['GET','POST'])
def gumin_zz():
    #sz_zhuanzhe
    zhuanzhe_1 = ''
    zhuanzhe_2 = ''
    zhuanzhe_3 = ''
    zhuanzhe_4 = ''
    zhuanzhe_5 = ''
    zhuanzhe_6 = ''
    zhuanzhe_7 = ''
    zhuanzhe_8 = ''
    zhuanzhe_9 = ''
    zhuanzhe_10 = ''
    zhuanzhe = ''
    if request.method == 'POST':
        if request.form.get('jisuanzhuanzhe')=='计算转折位':
            if request.form.get('zhuanzhe')!='':
                zhuanzhe = int(request.form.get('zhuanzhe'))
                b = zhuanzhe_gs(zhuanzhe)[0]
                n = zhuanzhe_gs(zhuanzhe)[1]
                w = zhuanzhe_gs(zhuanzhe)[2]
                zhuanzhe_1 = int(b + n*w)
                zhuanzhe_2 = int(b + n*(w + 1))
                zhuanzhe_3 = int(b + n*(w + 2))
                zhuanzhe_4 = int(b + n*(w + 3))
                zhuanzhe_5 = int(b + n*(w + 4))
                zhuanzhe_6 = int(b + n*(w + 5))
                zhuanzhe_7 = int(b + n*(w + 6))
                zhuanzhe_8 = int(b + n*(w + 7))
                zhuanzhe_9 = int(b + n*(w + 8))
                zhuanzhe_10 = int(b + n*(w + 9))
            else:
                zhuanzhe_1 = ''
                zhuanzhe_2 = ''
                zhuanzhe_3 = ''
                zhuanzhe_4 = ''
                zhuanzhe_5 = ''
                zhuanzhe_6 = ''
                zhuanzhe_7 = ''
                zhuanzhe_8 = ''
                zhuanzhe_9 = ''
                zhuanzhe_10 = ''
                zhuanzhe = ''
        if request.form.get('chongxinzhuanzhe')=='重新计算':
            zhuanzhe_1 = ''
            zhuanzhe_2 = ''
            zhuanzhe_3 = ''
            zhuanzhe_4 = ''
            zhuanzhe_5 = ''
            zhuanzhe_6 = ''
            zhuanzhe_7 = ''
            zhuanzhe_8 = ''
            zhuanzhe_9 = ''
            zhuanzhe_10 = ''
            zhuanzhe = ''
    return render_template('boot_33.html',my_zhuanzhe=zhuanzhe,my_zhuanzhe_1=zhuanzhe_1,my_zhuanzhe_2=zhuanzhe_2,my_zhuanzhe_3=zhuanzhe_3,my_zhuanzhe_4=zhuanzhe_4,my_zhuanzhe_5=zhuanzhe_5,my_zhuanzhe_6=zhuanzhe_6,my_zhuanzhe_7=zhuanzhe_7,my_zhuanzhe_8=zhuanzhe_8,my_zhuanzhe_9=zhuanzhe_9,my_zhuanzhe_10=zhuanzhe_10)
